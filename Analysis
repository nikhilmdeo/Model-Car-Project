USE mintclassics;
SELECT DISTINCT 
productName,
productCode,
productLine, 
quantityInStock,
warehouseCode,
buyPrice,
MSRP
FROM products 
ORDER BY warehouseCode;
/* 
Executed query to determine which distinct products are being held 
as inventory in which warehouses

Warehouse A --> Motorcycles/Planes (72% capacity)
Warehouse B --> Classic Cars (67% capacity)
Warehouse C --> Vintage Cars (50% capacity)
Warehouse D --> Trucks and Buses/Ships/Trains (75% capacity)
*/

SELECT DISTINCT 
orders.orderDate,
orderdetails.quantityOrdered,
orderdetails.priceEach,
orderdetails.priceEach * orderdetails.quantityOrdered AS costToBuyer,
products.productLine,
products.buyPrice,
products.MSRP
FROM orders
JOIN orderdetails ON orders.orderNumber = orderdetails.orderNumber
JOIN products ON orderdetails.productCode = products.productCode
order by costToBuyer DESC;

/* Executed this query to inspect which productLines are proving
to be most profitable for the company by order $ amount. */

SELECT productLine,
SUM(quantityInStock) AS inventoryByItemType
FROM products
GROUP BY productLine;

/* Executed SUM statement to grab an overview of inventory counts
of each productLine in warehouse to influence decisions about
re-stocking between facilities. */

SELECT DISTINCT
SUM(payments.amount),
customers.customerName
FROM payments
JOIN customers ON payments.customerNumber = customers.customerNumber
JOIN orders ON customers.customerNumber = orders.customerNumber
GROUP BY customers.customerName;

/* This is an aggregated function to view the total
revenue that was driven by each customer in the database by 
combining the sum of payments by customer. */


SELECT DISTINCT 
orderdetails.productCode, 
SUM(orderdetails.quantityOrdered) AS totalQuantityOrdered, 
SUM(orderdetails.priceEach) AS totalOrderCost,
products.productName,
products.productLine
FROM orderdetails
JOIN products on orderdetails.productCode = products.productCode
GROUP BY products.productCode

/* This statement shows us the $ amount ordered of each product
featured in the companys inventory which is a great insight into
which items are popular vs. others. */

